{"version":3,"sources":["components/titlle/title.js","components/feedback/feedback.js","components/statistik/statistik.js","components/Notification/Notification.js","App/App.js","index.js"],"names":["Title","FeedbackOptions","clickGood","clickNeutral","clickBad","type","name","onClick","Statistik","good","neutral","bad","countTotal","countPercentage","Notification","App","state","setState","preState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAMeA,EAJD,WACZ,OAAO,sDCgBMC,EAhBS,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAClD,OACE,6BACE,4BAAQC,KAAK,SAASC,KAAK,OAAOC,QAASL,GAA3C,QAGA,4BAAQG,KAAK,SAASC,KAAK,UAAUC,QAASJ,GAA9C,WAGA,4BAAQE,KAAK,SAASC,KAAK,MAAMC,QAASH,GAA1C,SCoBSI,EA9BG,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,IAAKC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,gBACnD,OACE,6BACE,0CAEA,6BACE,2BACE,wCADF,IACuBJ,GAEvB,2BACE,2CACCC,GAEH,2BACE,uCACCC,GAEH,2BACE,yCACCC,GAEH,2BACE,qDACCC,EAFH,QCnBOC,EAFM,kBAAM,kDC+DZC,E,4MA1DbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPT,UAAY,kBACV,EAAKe,UAAS,SAACC,GAAD,MAAe,CAC3BT,KAAMS,EAAST,KAAO,O,EAG1BN,aAAe,kBACb,EAAKc,UAAS,SAACC,GAAD,MAAe,CAC3BR,QAASQ,EAASR,QAAU,O,EAGhCN,SAAW,kBACT,EAAKa,UAAS,SAACC,GAAD,MAAe,CAC3BP,IAAKO,EAASP,IAAM,O,EAGxBQ,mBAAqB,WAAO,IAAD,EACM,EAAKH,MACpC,OAFyB,EACjBP,KADiB,EACXC,QADW,EACFC,K,EAIzBS,gCAAkC,WAAO,IAC/BX,EAAS,EAAKO,MAAdP,KACR,OAAOY,KAAKC,MAAc,IAAPb,EAAc,EAAKU,uB,uDAItC,IAAMV,EAAOc,KAAKP,MAAMP,KAClBC,EAAUa,KAAKP,MAAMN,QACrBC,EAAMY,KAAKP,MAAML,IACvB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACET,UAAWqB,KAAKrB,UAChBC,aAAcoB,KAAKpB,aACnBC,SAAUmB,KAAKnB,WAEhBmB,KAAKJ,qBAAuB,EAC3B,kBAAC,EAAD,CACEV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,WAAYW,KAAKJ,qBACjBN,gBAAiBU,KAAKH,oCAGxB,kBAAC,EAAD,W,GArDQI,aCFlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d1010bbb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Title = () => {\n  return <h1>Please leave feedback</h1>;\n};\n\nexport default Title;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ clickGood, clickNeutral, clickBad }) => {\n  return (\n    <div>\n      <button type=\"button\" name=\"good\" onClick={clickGood}>\n        Good\n      </button>\n      <button type=\"button\" name=\"neutral\" onClick={clickNeutral}>\n        Neutral\n      </button>\n      <button type=\"button\" name=\"bad\" onClick={clickBad}>\n        Bad\n      </button>\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  clickGood: PropTypes.func,\n  clickNeutral: PropTypes.func,\n  clickBad: PropTypes.func,\n};\n","import React from \"react\";\n\nconst Statistik = ({ good, neutral, bad, countTotal, countPercentage }) => {\n  return (\n    <div>\n      <h2>Statistics</h2>\n\n      <div>\n        <p>\n          <span>Good: </span> {good}\n        </p>\n        <p>\n          <span>Neutral: </span>\n          {neutral}\n        </p>\n        <p>\n          <span>Bad: </span>\n          {bad}\n        </p>\n        <p>\n          <span>Total: </span>\n          {countTotal}\n        </p>\n        <p>\n          <span>Positive feedback: </span>\n          {countPercentage}%\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Statistik;\n","import React from \"react\";\n\nconst Notification = () => <h2>No feedback given</h2>;\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Title from \"../components/titlle/title\";\nimport FeedbackOptions from \"../components/feedback/feedback\";\nimport Statistik from \"../components/statistik/statistik\";\nimport Notification from \"../components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  clickGood = () =>\n    this.setState((preState) => ({\n      good: preState.good + 1,\n    }));\n\n  clickNeutral = () =>\n    this.setState((preState) => ({\n      neutral: preState.neutral + 1,\n    }));\n\n  clickBad = () =>\n    this.setState((preState) => ({\n      bad: preState.bad + 1,\n    }));\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.round((good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    const good = this.state.good;\n    const neutral = this.state.neutral;\n    const bad = this.state.bad;\n    return (\n      <>\n        <Title />\n        <FeedbackOptions\n          clickGood={this.clickGood}\n          clickNeutral={this.clickNeutral}\n          clickBad={this.clickBad}\n        />\n        {this.countTotalFeedback() > 0 ? (\n          <Statistik\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            countTotal={this.countTotalFeedback()}\n            countPercentage={this.countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification />\n        )}\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}